#!/bin/bash

########################
# Start Widevine search
#######################
mkdir -p ~/.config/chromium/WidevineCdm

# Read version of widevine in apps
CHROME="$(grep '"version":' /opt/google/chrome/WidevineCdm/manifest.json 2> /dev/null | cut -f4 -d\")"
BRAVE="$(grep '"version":' ~/.config/BraveSoftware/Brave-Browser/WidevineCdm/manifest.json 2> /dev/null | cut -f4 -d\")"
FIREFOX="$(grep '"version":' ~/.mozilla/firefox/*.default/gmp-widevinecdm/*/manifest.json 2> /dev/null | cut -f4 -d\")"
NETFLIX="$(grep '"version":' ~/.netflix/gmp-widevinecdm/*/manifest.json 2> /dev/null | cut -f4 -d\")"
NFHD="$(grep '"version":' ~/.netflix-1080/gmp-widevinecdm/*/manifest.json 2> /dev/null | cut -f4 -d\")"
SPOTIFY="$(grep '"version":' ~/.spotify/gmp-widevinecdm/*/manifest.json 2> /dev/null | cut -f4 -d\")"
PRIME="$(grep '"version":' ~/.primevideo/gmp-widevinecdm/*/manifest.json 2> /dev/null | cut -f4 -d\")"



# Search for the latest version of widevine in various folders, then select the most recent in the WIDEVINE variable
WIDEVINE="$(echo "$CHROME CHROME
$BRAVE BRAVE
$FIREFOX FIREFOX
$NETFLIX NETFLIX
$NFHD NFHD
$SPOTIFY SPOTIFY
$PRIME PRIME" | sort -r | grep -m1 [0-9] | cut -f2 -d" ")"


case "$WIDEVINE" in

    CHROME)
        echo "{\"Path\":\"/opt/google/chrome/WidevineCdm/\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm

    ;;

    BRAVE)
        echo "{\"Path\":\"$HOME/.config/BraveSoftware/Brave-Browser/WidevineCdm/\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm

    ;;

    FIREFOX)
        FOLDER="$(file ~/.mozilla/firefox/*.default/gmp-widevinecdm/*/ | cut -f1 -d:)"
        echo "{\"Path\":\"$FOLDER\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm
        mkdir -p "$FOLDER/_platform_specific/linux_x64"
        ln -sf "$FOLDER/libwidevinecdm.so" "$FOLDER/_platform_specific/linux_x64/libwidevinecdm.so"
    ;;

    NETFLIX)
        FOLDER="$(file ~/.netflix/gmp-widevinecdm/*/ | cut -f1 -d:)"
        echo "{\"Path\":\"$FOLDER\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm
        mkdir -p "$FOLDER/_platform_specific/linux_x64"
        ln -sf "$FOLDER/libwidevinecdm.so" "$FOLDER/_platform_specific/linux_x64/libwidevinecdm.so"
    ;;

    NFHD)
        FOLDER="$(file ~/.netflix-1080/gmp-widevinecdm/*/ | cut -f1 -d:)"
        echo "{\"Path\":\"$FOLDER\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm
        mkdir -p "$FOLDER/_platform_specific/linux_x64"
        ln -sf "$FOLDER/libwidevinecdm.so" "$FOLDER/_platform_specific/linux_x64/libwidevinecdm.so"
    ;;
    
    SPOTIFY)
        FOLDER="$(file ~/.spotify/gmp-widevinecdm/*/ | cut -f1 -d:)"
        echo "{\"Path\":\"$FOLDER\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm
        mkdir -p "$FOLDER/_platform_specific/linux_x64"
        ln -sf "$FOLDER/libwidevinecdm.so" "$FOLDER/_platform_specific/linux_x64/libwidevinecdm.so"
    ;;

    PRIME)
        FOLDER="$(file ~/.primevideo/gmp-widevinecdm/*/ | cut -f1 -d:)"
        echo "{\"Path\":\"$FOLDER\"}" > ~/.config/chromium/WidevineCdm/latest-component-updated-widevine-cdm
        mkdir -p "$FOLDER/_platform_specific/linux_x64"
        ln -sf "$FOLDER/libwidevinecdm.so" "$FOLDER/_platform_specific/linux_x64/libwidevinecdm.so"
    ;;


esac


######################
# Stop Widevine search
######################



######################
# Start optimization
######################

OPTIMIZATION="$(cat ~/.config/chromium-optimize)"
VAINFO="$(vainfo 2>&1)"

if [ "$OPTIMIZATION" = "" ]
then
    if [ "$(systemd-detect-virt)" = "none" ] || [ "$(echo "$VAINFO" | grep nvidia)" = "" ] || [ "$(echo "$VAINFO" | grep nouveau)" = "" ] || [ "$(echo "$VAINFO" | grep VAProfileVC1Advanced)" != "" ]; then
        echo "performance" > ~/.config/chromium-optimize
        OPTIMIZATION="performance"
    else
        echo "normal" > ~/.config/chromium-optimize
        OPTIMIZATION="normal"
    fi

fi

if [ "$OPTIMIZATION" = "performance" ]
then

    PARAMETERS="--enable-accelerated-2d-canvas --enable-accelerated-mjpeg-decode --enable-accelerated-video --enable-features=MarkHttpAs,StrictOriginIsolation --enable-gpu-rasterization --enable-quic --use-vulkan --ignore-gpu-blacklist --enable-parallel-downloading"


elif [ "$OPTIMIZATION" = "optimize" ]
then

    PARAMETERS="--enable-accelerated-2d-canvas --enable-accelerated-mjpeg-decode --enable-accelerated-video --enable-features=MarkHttpAs,StrictOriginIsolation --enable-gpu-rasterization --enable-quic --use-vulkan --enable-parallel-downloading"

else

    PARAMETERS=""

fi

######################
# Stop optimization
######################


exec /usr/bin/chromium.orig --process-per-site $PARAMETERS --user-agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/637.36 (KHTML, like Gecko) Chrome/98.0.3202.97 Safari/637.36" ${1+"$@"}
